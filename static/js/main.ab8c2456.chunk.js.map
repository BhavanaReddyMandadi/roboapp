{"version":3,"sources":["components/card.js","components/cardlist.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","card","key","SeacrhBox","searchChange","type","placeholder","onChange","Scroll","props","style","overFlowY","border","height","children","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","searchfield","target","value","state","_this2","fetch","then","response","json","users","_this3","filteredRobots","filter","robot","toLowerCase","includes","length","SearchBox","components_Scroll","cardlist","Component","ReactDOM","render","src_containers_App","document","getElementById"],"mappings":"yNAiBeA,EAdF,SAAAC,GAAuB,IAArBC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,MAAOC,EAAQH,EAARG,GAC3B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,uDAChBH,EAAAC,EAAAC,cAAA,OAAKE,IAAM,SAASC,IAAG,wBAAAC,OAA4BP,EAA5B,cACvBC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,cAAML,EAAN,KACAG,EAAAC,EAAAC,cAAA,aAAKJ,MCaMS,EAlBE,SAAAX,GAAgB,IAAbY,EAAaZ,EAAbY,OACnB,OACAR,EAAAC,EAAAC,cAAA,WAEIM,EAAOC,IAAI,SAACC,EAAOC,GACrB,OACCX,EAAAC,EAAAC,cAACU,EAAD,CACCC,IAAOF,EACTZ,GAAMS,EAAOG,GAAGZ,GAChBF,KAAQW,EAAOG,GAAGd,KAClBC,MAASU,EAAOG,GAAGb,YCEPgB,EAdG,SAAAlB,GAAsB,IAAnBmB,EAAmBnB,EAAnBmB,aAEpB,OACCf,EAAAC,EAAAC,cAAA,OAAKC,UAAY,OACjBH,EAAAC,EAAAC,cAAA,SACEC,UAAY,mCACZa,KAAM,SACLC,YAAc,gBACdC,SAAYH,MCGFI,SAXA,SAACC,GAEf,OACEpB,EAAAC,EAAAC,cAAA,OAAKmB,MAAS,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UAEtEJ,EAAMK,YC0CKC,cAzCd,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACbC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAaDI,eAAiB,SAACC,GACjBR,EAAKS,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAb1CZ,EAAKa,MAAQ,CACZhC,OAAS,GACT6B,YAAc,IAJFV,mFAQM,IAAAc,EAAAX,KACnBY,MAAM,8CACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAK,OAAIL,EAAKL,SAAS,CAAE5B,OAAQsC,uCAQ/B,IAAAC,EAAAjB,KAEFkB,EAAiBlB,KAAKU,MAAMhC,OAAOyC,OAAO,SAAAC,GAC/C,OAAOA,EAAMrD,KAAKsD,cAAcC,SAASL,EAAKP,MAAMH,YAAYc,iBAGjE,OAAgC,IAA7BrB,KAAKU,MAAMhC,OAAO6C,OACbrD,EAAAC,EAAAC,cAAA,uBAGPF,EAAAC,EAAAC,cAAA,OAAKC,UAAY,MACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAY,MAAhB,gBACAH,EAAAC,EAAAC,cAACoD,EAAD,CAAYvC,aAAgBe,KAAKI,iBAClClC,EAAAC,EAAAC,cAACqD,EAAD,KACCvD,EAAAC,EAAAC,cAACsD,EAAD,CAAUhD,OAAUwC,aAlCPS,mBCDlBC,IAASC,OACR3D,EAAAC,EAAAC,cAAC0D,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.ab8c2456.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Card = ({name, email, id}) => {\r\n\treturn(\r\n\t\t\t<div className = 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t\t<img alt = 'robots' src = {`https://robohash.org/${id}?200x200`} />\r\n\t\t\t\t<div>\r\n\t\t\t\t<h2> {name} </h2>\r\n\t\t\t\t<p> {email}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t);\r\n}\r\n\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './card';\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\n\treturn(\r\n\t<div>\r\n\t{\r\n\t    robots.map((user , i) => {\r\n\t\t\treturn (\r\n\t\t\t\t<Card  \r\n\t\t\t  key = {i}\r\n\t\t\tid = {robots[i].id} \r\n\t\t\tname = {robots[i].name} \r\n\t\t\temail = {robots[i].email} \r\n\t\t\t/>)\r\n\t    })\r\n\t}\r\n\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SeacrhBox = ({ searchChange }) => {\r\n\r\n\treturn (\r\n\t\t<div className = 'pa2'>\r\n\t\t<input\r\n\t\t\t className = 'pa3 ba b--green bg-lightest-blue'\r\n\t\t\t type ='search'\r\n\t\t\t  placeholder = 'search robots'\r\n\t\t\t  onChange = {searchChange}\r\n\t\t\t  />\r\n\t\t</div>\t\t\r\n\t\t);\r\n}\r\n\r\nexport default SeacrhBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\r\n\treturn (\r\n\t\t <div style = {{overFlowY: 'scroll', border: '5px solid black', height: '800px'}}>\r\n\r\n\t\t {props.children}\r\n\r\n\t\t </div>\r\n\t\t);\r\n};\r\n\r\nexport default Scroll;\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport CardList from '../components/cardlist';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\n\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots : [],\r\n\t\t\tsearchfield : ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response => response.json())\r\n\t\t.then(users => this.setState({ robots: users }));\t\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({ searchfield: event.target.value })\t\t\t\r\n\t}\r\n\r\n\r\n\trender() {\r\n\r\n\t\tconst filteredRobots = this.state.robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t\t})\r\n\r\n\t\tif(this.state.robots.length === 0) {\r\n\t\t\treturn <h1> Loading </h1>\r\n\t\t} else {\r\n\t\t\treturn(\r\n\t\t\t<div className = 'tc'>\r\n\t\t\t  <h1 className = 'f1'> RoboFriends</h1>\r\n\t\t\t  <SearchBox  searchChange = {this.onSearchChange} /> \r\n\t\t\t <Scroll>\r\n\t\t\t  <CardList robots = {filteredRobots} />\r\n\t\t\t </Scroll>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\t\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\nimport { robots } from './robots';\nReactDOM.render(\n\t<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}